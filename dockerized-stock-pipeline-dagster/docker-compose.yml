services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  dagster-webserver:
    build:
      context: .
      dockerfile: docker/Dockerfile
    environment:
      DAGSTER_HOME: /opt/dagster
      # Pass-through env vars used by the job
      ALPHAVANTAGE_API_KEY: ${ALPHAVANTAGE_API_KEY}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      STOCK_SYMBOL: ${STOCK_SYMBOL}
      FETCH_INTERVAL: ${FETCH_INTERVAL}
    volumes:
      - dagster_home:/opt/dagster
      - ./dagster_project:/app/dagster_project
    command: >
      bash -lc "dagster-webserver -h 0.0.0.0 -p 3000 -m dagster_project"
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy

  dagster-daemon:
    build:
      context: .
      dockerfile: docker/Dockerfile
    environment:
      DAGSTER_HOME: /opt/dagster
      ALPHAVANTAGE_API_KEY: ${ALPHAVANTAGE_API_KEY}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      STOCK_SYMBOL: ${STOCK_SYMBOL}
      FETCH_INTERVAL: ${FETCH_INTERVAL}
    volumes:
      - dagster_home:/opt/dagster
      - ./dagster_project:/app/dagster_project
    command: >
      bash -lc "dagster-daemon run"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  pgdata:
  dagster_home:
